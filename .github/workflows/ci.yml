name: Java CI
on:
  push:
    branches:
      - '*'
      - '!edge'
    paths:
      - '**.java'
  pull_request:
    branches:
      - '*'
  workflow_dispatch:

env:
  base: ubuntu:22.04
  build-docker: true
  dockerfile-os: linux
  esum: b6586c432948134387b801add3b46048e3fb58390d74eea80e00c539016a54e6
  image: localhost:5000/eclipse-temurin:21-jdk
  java-version: 21-ea
  java-distribution: 'temurin'
  java-version-env: jdk-21+35-ea-beta
  jdk: /opt/java/openjdk
  platform: linux/amd64
  source: https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21%2B35-ea-beta/OpenJDK21U-jdk_x64_linux_hotspot_ea_21-0-35.tar.gz

jobs:
  buildtest:
    name: Test Build on ubuntu-latest
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Set up JDK ${{ env.java-version }}
      uses: actions/setup-java@v3
      with:
        distribution: ${{ env.java-distribution }}
        java-version: ${{ env.java-version }}
    - name: Set up Ant
      run: sudo apt-get install ant
    - name: Build with Ant
      run: ant -noinput -buildfile build.xml test
  dockertest:
    name: Docker test on ubuntu-latest
    runs-on: ubuntu-latest
    needs: buildtest
    timeout-minutes: 5
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        platforms: linux/amd64
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        version: latest
        driver-opts: network=host
    - name: Build Builder Image (Save Cache)
      if: env.build-docker == true && github.ref_name == 'master'
      uses: docker/build-push-action@v5
      with:
        context: ./development-resources/docker-base-image-builder
        file: ./Dockerfile.${{ env.dockerfile-os }}
        platforms: ${{ env.platform }}
        push: true
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          BASE=${{ env.base }}
          ESUM=${{ env.esum }}
          JAVA-HOME=${{ env.jdk }}
          JAVA-VERSION=${{ env.java-version-env }}
          JRE=false
          SOURCE=${{ env.source }}
        tags: ${{ env.image }}
    - name: Build Builder Image
      if: env.build-docker == true && github.ref_name != 'master'
      uses: docker/build-push-action@v5
      with:
        context: ./development-resources/docker-base-image-builder
        file: ./Dockerfile.${{ env.dockerfile-os }}
        platforms: ${{ env.platform }}
        push: true
        cache-from: type=gha,scope=master
        build-args: |
          BASE=${{ env.base }}
          ESUM=${{ env.esum }}
          JAVA-HOME=${{ env.jdk }}
          JAVA-VERSION=${{ env.java-version-env }}
          JRE=false
          SOURCE=${{ env.source }}
        tags: ${{ env.image }}
    - name: Build Docker (Save Cache)
      if: github.ref_name == 'master'
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64
        push: true
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          BUILDER-BASE=${{ env.image }}
          PROJECT_VERSION=0.0.0
          ANT_ARGS=-Dbuildtype=test -Dversion=0.0.0
        tags: localhost:5000/tester/phantombot:test
    - name: Build Docker
      if: github.ref_name != 'master'
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64
        push: true
        cache-from: type=gha,scope=master
        build-args: |
          BUILDER-BASE=${{ env.image }}
          PROJECT_VERSION=0.0.0
          ANT_ARGS=-Dbuildtype=test -Dversion=0.0.0
        tags: localhost:5000/tester/phantombot:test
    - name: Test with Docker
      run: docker run --rm --name phantombot localhost:5000/tester/phantombot:test launch-docker.sh --version
