name: Build JLink Binaries

on:
  workflow_dispatch:

jobs:
  updatejlink:
    name: Update JLink Builds
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    strategy:
      matrix:
        include:
          - osname: Linux (GCC, x86_64)
            java-version: 21-ea
            java-distribution: 'temurin'
            folder: java-runtime-linux
            qemu: false
            os: ubuntu-latest
            script: jlink-jdk-linux.sh
          - osname: Linux (GCC, arm64)
            java-version: 21-ea
            java-distribution: 'temurin'
            folder: java-runtime-arm64
            qemu: true
            platform: linux/arm64
            image: localhost:5000/eclipse-temurin:21-jdk
            build-image: true
            base: ubuntu:22.04
            java-version-env: jdk-21+35-ea-beta
            source: https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21%2B35-ea-beta/OpenJDK21U-jdk_aarch64_linux_hotspot_ea_21-0-35.tar.gz
            esum: f541f545c0e8046c2b242a1701e5be4a7abda2ffbc150d7f96b6cd5571f17429
            os: ubuntu-latest
            script: jlink-jdk-docker.sh
            jdk: /opt/java/openjdk
          - osname: Linux (GCC, arm32)
            java-version: 21-ea
            java-distribution: 'temurin'
            folder: java-runtime-arm32
            qemu: true
            platform: linux/arm/v7
            image: localhost:5000/eclipse-temurin:21-jdk
            build-image: true
            base: ubuntu:22.04
            java-version-env: jdk-21+35-ea-beta
            source: https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21%2B35-ea-beta/OpenJDK21U-jdk_arm_linux_hotspot_ea_21-0-35.tar.gz
            esum: f31af20af3a6209e67d51bb21ecc84196d005fa0874b23e60deb1569f84494d0
            os: ubuntu-latest
            script: jlink-jdk-docker.sh
            jdk: /opt/java/openjdk
          - osname: Windows
            java-version: 21-ea
            os: windows-latest
            java-distribution: 'temurin'
            folder: java-runtime
            qemu: false
            script: jlink-jdk.bat
          - osname: macOS
            java-version: 21-ea
            java-distribution: 'temurin'
            folder: java-runtime-macos
            qemu: false
            os: macos-latest
            script: jlink-jdk-macos.sh
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Set up QEMU
      if: matrix.qemu == true
      uses: docker/setup-qemu-action@v3
      with:
        platforms: ${{ matrix.platform }}
    - name: Build Image
      if: matrix.build-image == true
      uses: docker/build-push-action@v5
      with:
        context: ./development-resources/docker-base-image-builder
        file: ./Dockerfile
        platforms: ${{matrix.platform}}
        push: true
        build-args: |
          BASE=${{matrix.base}}
          JAVA-VERSION=${{matrix.java-version-env}}
          SOURCE=${{matrix.source}}
          ESUM=${{matrix.esum}}
        tags: ${{matrix.image}}
    - name: Set up JDK
      if: matrix.qemu == false
      id: setup-java
      uses: actions/setup-java@v3
      with:
        distribution: ${{ matrix.java-distribution }}
        java-version: ${{ matrix.java-version }}
        check-latest: true
    - name: Run JLink (Windows)
      if: matrix.os == 'windows-latest'
      env:
        FOLDER: ${{ matrix.folder }}
        SCRIPT: ${{ matrix.script }}
        JDK: ${{ steps.setup-java.outputs.path }}
      run: |
        cd development-resources
        cmd /C $env:SCRIPT
    - name: Run JLink (Non-Windows)
      if: matrix.os != 'windows-latest' && !matrix.qemu
      env:
        FOLDER: ${{ matrix.folder }}
        SCRIPT: ${{ matrix.script }}
        JDK: ${{ steps.setup-java.outputs.path }}
      run: |
        cd development-resources
        chmod +x $SCRIPT
        /bin/bash $SCRIPT
    - name: Run JLink (Docker)
      if: matrix.qemu == true
      env:
        FOLDER: ${{ matrix.folder }}
        SCRIPT: ${{ matrix.script }}
        JDK: ${{ matrix.jdk }}
        PLATFORM: ${{ matrix.platform }}
        IMAGE: ${{ matrix.image }}
      run: |
        cd development-resources
        chmod +x $SCRIPT
        /bin/bash $SCRIPT
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.folder }}
        path: resources/${{ matrix.folder }}/**
        if-no-files-found: error
        retention-days: 1
  commit:
    name: Commit Binaries
    runs-on: ubuntu-latest
    needs: updatejlink
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GH_TOKEN }}
    - name: Download Artifacts
      uses: actions/download-artifact@v3
      with:
        path: resources
    - name: Commit Changes
      uses: EndBug/add-and-commit@v9
      with:
        message: Updated the Java binaries
        default_author: github_actions